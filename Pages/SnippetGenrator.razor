@page "/"

@using Services.SnippetGenrator.Models;

<PageTitle>Eka - Advanced Visual Studio Snippet Generator</PageTitle>

<div class="row">
    <div class="col-md-8 border rounded p-2">
        <form method="post" @onsubmit="GenerateSnippet">
            <input type="hidden" @bind="Payload.Body.CodeBlock.Kind" />
            <div class="row g-1">
                <div class="col-md-4 mb-1">
                    <div class="form-group">
                        <label class="form-label" for="titleInput">Title</label>
                        <input type="text" class="form-control" required id="titleInput"
                            placeholder="Title for the snippet" autofocus maxlength="100"
                            @bind-value="Payload.Header.Title">
                    </div>
                </div>

                <div class="col-md-4 mb-1">
                    <div class="">
                        <label class="form-label" for="shortcutInput">Shortcut</label>
                        <input type="text" class="form-control" id="shortcutInput" required
                            placeholder="Shortcut to replaced by code" @bind-value="Payload.Header.Shortcut" />
                    </div>
                </div>

                <div class="col-md-4 mb-1">
                    <div class="form-group">
                        <label class="form-label" for="authorInput">Author</label>
                        <input type="text" class="form-control" id="authorInput" placeholder="Author Name"
                            maxlength="50" @bind-value="Payload.Header.Author" />
                    </div>
                </div>

                <div class="col-md-8 mb-1">
                    <div class="form-group">
                        <label class="form-label" for="DescriptionInput">Description</label>
                        <input type="text" class="form-control" id="DescriptionInput"
                            placeholder="Description for the snippet" autofocus maxlength="250"
                            @bind-value="Payload.Header.Description">
                    </div>
                </div>

                <div class="col-md-4 mb-1">
                    <div class="form-group">
                        <label class="form-label" for="helpURLInput">Help URL</label>
                        <input type="text" class="form-control" id="helpURLInput" placeholder="Help URL for the snippet"
                            autofocus maxlength="250" @bind-value="Payload.Header.HelpURL">
                    </div>
                </div>

                <div class="col-md-6 mb-1">
                    <div class="form-group">
                        <label class="form-label" for="keywordsInput">Keywords</label>
                        <input type="text" class="form-control" id="keywordsInput"
                            placeholder="Comma separated keywords" autofocus maxlength="250"
                            @bind-value="Payload.Header.KeywordsForDisplay">
                    </div>
                </div>

                <div class="col-md-3 mb-1">
                    <div class="">
                        <label class="form-label" for="languageSelect">Language - @Payload.Body.CodeBlock.Language</label>
                        <select class="form-control" id="languageSelect" required
                            @bind="Payload.Body.CodeBlock.Language">
                            <option selected disabled hidden></option>
                            <option value="csharp">csharp</option>
                            @* <option value="VB">VB</option> *@
                        </select>
                    </div>
                </div>

                <div class="col-md-3 mb-1">
                    <div class="">
                        <label class="form-label" for="typeSelect">Type</label>
                        <select class="form-control" id="typeSelect" @bind="Payload.Header.SnipperType">
                            <option selected disabled hidden></option>
                            @foreach (var snippetType in Enum.GetValues(typeof(SnippetType)))
                            {
                                <option value="@snippetType">@snippetType</option>
                            }
                        </select>
                    </div>
                </div>

                <div class="col-md-6 mb-1">
                    <div class="">
                        <label class="form-label" for="refInput">References</label>
                        <table class="table table-striped table-sm mb-0" style="height: 125PX;">
                            <thead>
                                <tr style="py-0 w-100">
                                    <td class="py-0 w-50">Assembly Name</td>
                                    <td class="py-0 w-50">HelpURL</td>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var reference in Payload.Body.References)
                                {
                                    <tr style="py-0 w-100">
                                        <td class="py-0 w-50">@reference.Assembly</td>
                                        <td class="py-0 w-50">@reference.HelpURL</td>
                                    </tr>
                                }

                                @if (!Payload.Body.References.Any())
                                {
                                    <tr>
                                        <td colspan="2">No references added</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <form @onsubmit="UpdateReference">
                        <div class="input-group">
                            <input type="text" required class="form-control" placeholder="DLL Reference"
                                @bind="ReferencePayload.Assembly" />
                            <input type="text" class="form-control" placeholder="DLL Reference Help URL"
                                @bind="ReferencePayload.HelpURL" />
                            <input type="submit" class="btn btn-primary" Value="+" />
                        </div>
                    </form>
                </div>

                <div class="col-md-6 mb-1">
                    <div class="">
                        <label class="form-label" for="importInput">Imports</label>
                        <table class="table table-striped table-sm mb-0" style="height: 125px;">
                            <thead>
                                <tr style="py-0 w-100">
                                    <td class="py-0 w-50">Namespace</td>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var reference in Payload.Body.Imports)
                                {
                                    <tr style="py-0 w-100">
                                        <td class="py-0 w-50">@reference.Namespace</td>
                                    </tr>
                                }
                                @if (!Payload.Body.References.Any())
                                {
                                    <tr>
                                        <td colspan="2">No Imports added</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <form @onsubmit="UpdateImport">
                        <div class="input-group">
                            <input type="text" class="form-control" required placeholder="Namespace to import"
                                @bind="ImportPayload.Namespace" />
                            <input type="submit" class="btn btn-primary" Value="+" />
                        </div>
                    </form>
                </div>

                <div class="col-md-12 mb-1">
                    <div class="">
                        <label class="form-label" for="declarationInput">Placeholders / Declarations</label>
                        <table class="table table-striped table-sm mb-0" style="height: 125px;">
                            <thead>
                                <tr style="py-0 w-100">
                                    <td class="py-0 w-25">Identifier</td>
                                    <td class="py-0 w-25">Default Name</td>
                                    <td class="py-0 w-50">Tooltip</td>
                                    <td class="py-0 w-25">Function</td>
                                    <td class="py-0 w-50">Editable</td>
                                </tr>
                            </thead>

                            <tbody>
                                @foreach (var declaration in Payload.Body.Declarations)
                                {
                                    <tr style="py-0 w-100">
                                        <td class="py-1 w-25">@declaration.ID</td>
                                        <td class="py-0 w-25">@declaration.Default</td>
                                        <td class="py-0 w-25">@declaration.Tooltip</td>
                                        <td class="py-0 w-25">@declaration.Function</td>
                                        <td class="py-0 w-50">@declaration.Editable</td>
                                    </tr>
                                }

                                @if (!Payload.Body.Declarations.Any())
                                {
                                    <tr>
                                        <td colspan="5">No placeholders added</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <form @onsubmit="UpdateDeclaration">
                        <div class="input-group">
                            <input type="text" class="form-control" required placeholder="Identifier for placeholder"
                                @bind="DeclarationPayload.ID" />
                            <input type="text" class="form-control" placeholder="Default name for placeholder"
                                @bind="DeclarationPayload.Default" />
                            <input type="text" class="form-control" placeholder="Tooltip for placeholder"
                                @bind="DeclarationPayload.Tooltip" />
                            <input type="text" class="form-control" placeholder="Function name for placeholder"
                                @bind="DeclarationPayload.Function" />
                            <div class="input-group-text">
                                <input type="checkbox" class="form-check-input mt-0" placeholder="Editable"
                                    title="Is this placehoder editable" @bind="DeclarationPayload.Editable" />
                            </div>
                            <input type="submit" class="btn btn-primary" Value="+" />
                        </div>
                    </form>
                </div>

                <div class="col-md-12 mb-1">
                    <div class="">
                        <label class="form-label" for="codeInput">Code</label>
                        <textarea class="form-control" rows="4" required placeholder="Code block to be replaced by"
                            @bind="Payload.Body.CodeBlock.Code"></textarea>
                    </div>
                </div>

                <div class="col-md-12 mb-1">
                    <div class="row justify-content-end">
                        <div class="col-auto">
                            <input type="submit" class="btn btn-success pull-right" value="Generate" />
                            <input type="button" class="btn btn-success pull-right" value="Download" @onclick="DownloadFileFromStream" />
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
    <div class="col-md-4 border rounded p-2">
        <div class="row">
            <div class="col-md-12 mb-3">
                <div class="">
                    <label class="form-label" for="languageSelect">Preload</label>
                    <select class="form-control" id="preloadSelect" @onchange="OnPreloadSelect">
                        <option selected disabled hidden></option>
                        @foreach (var snippetType in Enum.GetValues(typeof(PredefinedSnippetType)))
                        {
                            <option value="@((int)snippetType)">@snippetType</option>
                        }
                    </select>
                </div>
            </div>

            <div class="col-md-12">
                <div class="form-floating">
                    <textarea class="form-control" style="height: calc(100vh - 160px); resize: none;" disabled readonly
                        resize="false" @bind="CodeSnippet">
                </textarea>
                    <label for="floatingInput">Generated Snippet Preview</label>
                </div>
            </div>
        </div>
    </div>
</div>