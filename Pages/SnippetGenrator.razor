@page "/"
@page "/snippet-generator"

@using Services.SnippetGenrator.Models;

<PageTitle>Eka - Advanced Visual Studio Snippet Generator</PageTitle>

<div class="row">
    <div class="col-md-8 border rounded p-2">
        <form method="post" @onsubmit="GenerateSnippet">
            <input type="hidden" @bind="Payload.Body.CodeBlock.Kind" />
            <div class="row g-1 gx-2">
                <div class="col-md-4 mb-1">
                    <div class="form-group">
                        <label class="form-label w-100" for="titleInput">Name</label>
                        <input type="text" class="form-control" required id="titleInput"
                            placeholder="Title for the snippet" autofocus maxlength="100"
                            title="This will used in snippet manager to display snippet name."
                            @bind-value="Payload.Header.Title" />
                        <span class="tooltip-container">
                            <i class="bi bi-lightbulb text-secondary"></i>
                            <span class="tooltip">
                                <span class="header">Name:</span>
                                This will used in snippet manager to display snippet name.
                            </span>
                        </span>
                    </div>
                </div>

                <div class="col-md-4 mb-1">
                    <div class="">
                        <label class="form-label w-100" for="shortcutInput">Shortcut</label>
                        <input type="text" class="form-control" id="shortcutInput" required
                            placeholder="Shortcut to replaced by code" @bind-value="Payload.Header.Shortcut" />
                        <span class="tooltip-container">
                            <i class="bi bi-lightbulb text-secondary"></i>
                            <span class="tooltip">
                                <span class="header">Shortcut:</span>
                                Specifies the shortcut text that can be used to insert the snippet.
                            </span>
                        </span>
                    </div>
                </div>

                <div class="col-md-4 mb-1">
                    <div class="">
                        <label class="form-label w-100" for="languageSelect">Language</label>
                        <select class="form-control" id="languageSelect" required
                            @bind="Payload.Body.CodeBlock.Language">
                            <option selected disabled hidden></option>
                            <option value="csharp">csharp</option>
                            @* <option value="VB">VB</option> *@
                        </select>
                        <span class="tooltip-container">
                            <i class="bi bi-lightbulb text-secondary"></i>
                            <span class="tooltip">
                                <span class="header">Language:</span>
                                The programming language of the code snippet going to be used for.
                            </span>
                        </span>
                    </div>
                </div>

                <div class="col-md-4 mb-1">
                    <div class="">
                        <label class="form-label w-100" for="typeSelect">Type</label>
                        <select class="form-control" id="typeSelect" @bind="Payload.Header.SnipperType">
                            <option selected disabled hidden></option>
                            @foreach (var snippetType in Enum.GetValues(typeof(SnippetType)))
                            {
                                <option value="@snippetType">@snippetType</option>
                            }
                        </select>
                        <span class="tooltip-container">
                            <i class="bi bi-lightbulb text-secondary"></i>
                            <span class="tooltip">
                                <span class="header">Type:</span>
                                Specifies how Visual Studio inserts the code snippet into the code.
                            </span>
                        </span>
                    </div>
                </div>

                <div class="col-md-4 mb-1">
                    <div class="form-group">
                        <label class="form-label w-100" for="authorInput">Author</label>
                        <input type="text" class="form-control" id="authorInput" placeholder="Author Name"
                            maxlength="50" @bind-value="Payload.Header.Author" />
                        <span class="tooltip-container">
                            <i class="bi bi-lightbulb text-secondary"></i>
                            <span class="tooltip">
                                <span class="header">Author:</span>
                                The name of the person or company that authored the code snippet.
                            </span>
                        </span>
                    </div>
                </div>

                <div class="col-md-4 mb-1">
                    <div class="form-group">
                        <label class="form-label w-100" for="helpURLInput">Documentation URL</label>
                        <input type="text" class="form-control" id="helpURLInput" placeholder="Help URL for the snippet"
                            autofocus maxlength="250" @bind-value="Payload.Header.HelpURL" />
                        <span class="tooltip-container">
                            <i class="bi bi-lightbulb text-secondary"></i>
                            <span class="tooltip">
                                <span class="header">Documentation URL:</span>
                                A URL that contains more information about the code snippet.
                            </span>
                        </span>
                    </div>
                </div>

                <div class="col-md-6 mb-1">
                    <div class="form-group">
                        <label class="form-label w-100" for="DescriptionInput">Description</label>
                        <input type="text" class="form-control" id="DescriptionInput"
                            placeholder="Description for the snippet" autofocus maxlength="250"
                            @bind-value="Payload.Header.Description" />
                        <span class="tooltip-container">
                            <i class="bi bi-lightbulb text-secondary"></i>
                            <span class="tooltip">
                                <span class="header">Description:</span>
                                A detailed description of the code snippet.
                            </span>
                        </span>
                    </div>
                </div>

                <div class="col-md-6 mb-1">
                    <div class="form-group">
                        <label class="form-label w-100" for="keywordsInput">Keywords</label>
                        <input type="text" class="form-control" id="keywordsInput"
                            placeholder="Comma separated keywords" autofocus maxlength="250"
                            @bind-value="Payload.Header.KeywordsForDisplay" />
                        <span class="tooltip-container">
                            <i class="bi bi-lightbulb text-secondary"></i>
                            <span class="tooltip">
                                <span class="header">Keywords:</span>
                                Comma separated list of keywords for the code snippet.
                            </span>
                        </span>
                    </div>
                </div>

                <hr class="opacity-25 my-2" />

                <div class="col-md-6 mb-1">
                    <div class="">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" role="switch" id="dllReferenceCheckbox"
                                @bind="Payload.Body.ReferencesRequired" />
                            <label class="form-check-label" for="dllReferenceCheckbox">DLL References Required</label>
                        </div>
                        <table class="table border table-sm mb-0 @(Payload.Body.ReferencesRequired ? "" : "d-none")"
                            style="height: 125PX;">
                            <thead>
                                <tr style="py-0 w-100">
                                    <td class="py-0 w-50">Assembly Name</td>
                                    <td class="py-0 w-50">HelpURL</td>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var reference in Payload.Body.References)
                                {
                                    <tr style="py-0 w-100">
                                        <td class="py-0 w-50">@reference.Assembly</td>
                                        <td class="py-0 w-50">@reference.HelpURL</td>
                                    </tr>
                                }

                                @if (!Payload.Body.References.Any())
                                {
                                    <tr>
                                        <td colspan="2">No references added</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <form @onsubmit="UpdateReference" class="@(Payload.Body.ReferencesRequired ? "" : "d-none")">
                        <div class="input-group">
                            <input type="text" required class="form-control" placeholder="DLL fullname with extension"
                                @bind="ReferencePayload.Assembly" />
                            <span class="tooltip-container">
                                <i class="bi bi-lightbulb text-secondary"></i>
                                <span class="tooltip">
                                    <span class="header">DLL reference:</span>
                                    Contains the name of the assembly referenced by the code snippet.
                                    This will automatically refered by the snippet for the targeting project.
                                    This should be the exact full name of the assembly dll including the extension.
                                </span>
                            </span>

                            <input type="text" class="form-control" placeholder="DLL documentation URL"
                                @bind="ReferencePayload.HelpURL" />
                            <span class="tooltip-container">
                                <i class="bi bi-lightbulb text-secondary"></i>
                                <span class="tooltip">
                                    <span class="header">Documentation URL:</span>
                                    Contains a URL that provides more information about the given assembly.
                                </span>
                            </span>

                            <input type="submit" class="btn btn-primary" Value="+" />
                        </div>
                    </form>
                </div>

                <div class="col-md-6 mb-1">
                    <div class="">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" role="switch" id="importsEnabledCheckbox"
                                @bind="Payload.Body.ImportsRequired">
                            <label class="form-check-label" for="importsEnabledCheckbox">Namespace Imports
                                Required</label>
                        </div>
                        <table class="table border table-sm mb-0 @(Payload.Body.ImportsRequired ? "" : "d-none")"
                            style="height: 125px;">
                            <thead>
                                <tr style="py-0 w-100">
                                    <td class="py-0 w-50">Namespace</td>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var reference in Payload.Body.Imports)
                                {
                                    <tr style="py-0 w-100">
                                        <td class="py-0 w-50">@reference.Namespace</td>
                                    </tr>
                                }
                                @if (!Payload.Body.References.Any())
                                {
                                    <tr>
                                        <td colspan="2">No Imports added</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <form @onsubmit="UpdateImport" class="@(Payload.Body.ImportsRequired ? "" : "d-none")">
                        <div class="input-group">
                            <input type="text" class="form-control" required
                                placeholder="Name of the Namespace to import" @bind="ImportPayload.Namespace" />
                            <span class="tooltip-container">
                                <i class="bi bi-lightbulb text-secondary"></i>
                                <span class="tooltip">
                                    <span class="header">Namespace:</span>
                                    Specifies the namespace used by the code snippet. This will automatically imported
                                    to the class which triggers the snippet.
                                    This should be the exact namespace name including separators(.).
                                </span>
                            </span>

                            <input type="submit" class="btn btn-primary" Value="+" />
                        </div>
                    </form>
                </div>

                <hr class="opacity-25 my-2" />

                <div class="col-md-12 mb-1">
                    <div class="">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" role="switch"
                                id="declarationsEnabledCheckbox" @bind="Payload.Body.DeclarationsRequired">
                            <label class="form-check-label" for="declarationsEnabledCheckbox">Placeholders /
                                Declarations
                                Required</label>
                        </div>
                        <table class="table border table-sm mb-0 @(Payload.Body.DeclarationsRequired ? "" : "d-none")"
                            style="height: 125px;">
                            <thead>
                                <tr style="py-0 w-100">
                                    <td class="py-0 w-25">Identifier</td>
                                    <td class="py-0 w-25">Default Name</td>
                                    <td class="py-0 w-50">Tooltip</td>
                                    <td class="py-0 w-25">Function</td>
                                    <td class="py-0 w-50">Editable</td>
                                </tr>
                            </thead>

                            <tbody>
                                @foreach (var declaration in Payload.Body.Declarations)
                                {
                                    <tr style="py-0 w-100">
                                        <td class="py-1 w-25">@declaration.ID</td>
                                        <td class="py-0 w-25">@declaration.Default</td>
                                        <td class="py-0 w-25">@declaration.Tooltip</td>
                                        <td class="py-0 w-25">@declaration.Function</td>
                                        <td class="py-0 w-50">@declaration.Editable</td>
                                    </tr>
                                }

                                @if (!Payload.Body.Declarations.Any())
                                {
                                    <tr>
                                        <td colspan="5">No placeholders added</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <form @onsubmit="UpdateDeclaration" class="@(Payload.Body.DeclarationsRequired ? "" : "d-none")">
                        <div class="input-group">
                            <input type="text" class="form-control" required
                                placeholder="Placeholder name for code block" @bind="DeclarationPayload.ID" />
                            <span class="tooltip-container">
                                <i class="bi bi-lightbulb text-secondary"></i>
                                <span class="tooltip">
                                    <span class="header">Name:</span>
                                    This identifies a replacement for a piece of code entirely contained within the
                                    snippet that can be customized after the snippet is inserted.
                                    In the code block this name should referenced with $ symbol.
                                </span>
                            </span>

                            <input type="text" class="form-control" placeholder="Default name for placeholder"
                                @bind="DeclarationPayload.Default" />
                            <span class="tooltip-container">
                                <i class="bi bi-lightbulb text-secondary"></i>
                                <span class="tooltip">
                                    <span class="header">Default Name:</span>
                                    Specifies the default value for the replacement literal when you insert the code
                                    snippet.
                                </span>
                            </span>

                            <input type="text" class="form-control" placeholder="Tooltip for placeholder"
                                @bind="DeclarationPayload.Tooltip" />
                            <span class="tooltip-container">
                                <i class="bi bi-lightbulb text-secondary"></i>
                                <span class="tooltip">
                                    <span class="header">Tooltip:</span>
                                    Can used to describe the expected value and usage of the replacement literal.
                                </span>
                            </span>

                            <input type="text" class="form-control" placeholder="Function name for placeholder"
                                @bind="DeclarationPayload.Function" />
                            <span class="tooltip-container">
                                <i class="bi bi-lightbulb text-secondary"></i>
                                <span class="tooltip">
                                    <span class="header">Function Name:</span>
                                    Specifies a function to execute when the replacemetn literal receives focus in
                                    Visual Studio.
                                </span>
                            </span>

                            <div class="input-group-text">
                                <input type="checkbox" class="form-check-input mt-0" placeholder="Editable"
                                    title="Is this placehoder editable" @bind="DeclarationPayload.Editable" />
                            </div>
                            <input type="submit" class="btn btn-primary" Value="+" />
                        </div>
                    </form>
                </div>

                <hr class="opacity-25 my-2" />

                <div class="col-md-12 mb-1">
                    <div class="">
                        <label class="form-label w-100" for="codeInput">Code</label>
                        <span class="tooltip-container pull-down">
                            <i class="bi bi-lightbulb text-secondary"></i>
                            <span class="tooltip">
                                <span class="header">Name:</span>
                                Provides a container for short code block which will be expanded or sorrounded based on
                                the type.
                                This gives all declarated replacement literals and Two reserved words are available for
                                use in the text of the Code element: $end$ and $selected$. $end$ marks the location to
                                place the cursor after the code snippet is inserted. $selected$ represents selected
                                document text to insert into the snippet when the snippet is invoked.
                            </span>
                        </span>
                        <textarea class="form-control" rows="4" required id="codeInput"
                            placeholder="Code block to be replaced by" @bind="Payload.Body.CodeBlock.Code"></textarea>
                    </div>
                </div>

                <div class="col-md-12 mb-1">
                    <div class="row justify-content-end">
                        <div class="col-auto">
                            <input type="submit" class="btn btn-success pull-right" value="Generate" />
                            <input type="button" class="btn btn-success pull-right" value="Download"
                                @onclick="DownloadFileFromStream" disabled="@(!CanDownload)" />
                            <input type="submit" class="btn btn-danger pull-right" value="Reset"
                                @onclick="ResetInputs" />
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
    <div class="col-md-4 border rounded p-2">
        <div class="row">
            <div class="col-md-12 mb-1">
                <div class="">
                    <label class="form-label w-100" for="preloadSelect">Preload Snippet Samples</label>
                    <select class="form-control" id="preloadSelect" @bind:get="PreLoadSelected"
                        @bind:set="(value) => { OnPreloadSelect(value); }">
                        <option selected disabled hidden></option>
                        @foreach (var snippetType in Enum.GetValues(typeof(PredefinedSnippetType)))
                        {
                            <option value="@((int)snippetType)">@snippetType</option>
                        }
                    </select>
                    <span class="tooltip-container">
                        <i class="bi bi-lightbulb text-secondary"></i>
                        <span class="tooltip">
                            <span class="header">Samples:</span>
                            This actually predefined snippets that can be loaded and downloaded for use. Also you can
                            select a snippet and modify it to your need and use download and use it.
                        </span>
                    </span>
                </div>

            </div>

            <div class="col-md-12">
                <hr class="opacity-25 my-2" />
            </div>

            <div class="col-md-12">
                <div class="form-floating">
                    <textarea class="form-control" style="height: calc(100vh - 212px); resize: none;" disabled readonly
                        resize="false" @bind="CodeSnippet" id="snippetPreview">
                </textarea>
                    <label for="snippetPreview">Generated Snippet Preview</label>
                </div>
            </div>
        </div>
    </div>
</div>